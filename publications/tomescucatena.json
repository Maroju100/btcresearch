{
    "id": "tomescucatena",
    "title": "Catena: Preventing Lies With Bitcoin",
    "year": 2016,
    "type": "article",
    "sortkey": 20161121,
    "authors": [
        {
            "affiliation": "MIT CSAIL",
            "name": "Alin Tomescu"
        },
        {
            "affiliation": "MIT CSAIL",
            "name": "Srinivas Devadas"
        }
    ],
    "url": "https://eprint.iacr.org/2016/1062.pdf",
    "peer-reviewed": false,
    "abstract": "We present Catena, an efficiently-verifiable Bitcoin witnessing scheme. Catena enables any number of thin clients, such as mobile phones, to efficiently agree on a log of applicationspecific statements managed by an adversarial server. Catena implements a log as an OP_RETURN transaction chain and prevents forks in the log by leveraging Bitcoin’s security against double spends. Specifically, if a log server wants to equivocate it has to double spend a Bitcoin transaction output. Thus, Catena logs are as hard to fork as the Bitcoin blockchain: an adversary without a large fraction of the network’s computational power cannot fork Bitcoin and thus cannot fork a Catena log either. However, different from previous Bitcoin-based work, Catena decreases the bandwidth requirements of log auditors from 90 GB to only tens of megabytes. More precisely, our clients only need to download all Bitcoin block headers (currently less than 35 MB) and a small, 600-byte proof for each statement in a block. We implemented Catena in Java using the bitcoinj library and used it to extend CONIKS, a recent key transparency scheme, to witness its public-key directory in the Bitcoin blockchain where it can be efficiently verified by auditors. We show that Catena can be used to secure many systems today such as public-key directories, Tor directory servers or software transparency schemes"
}
